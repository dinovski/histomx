pca.df <- as.data.frame(resPCA$ind$coord[,1:nrow(resPCA$eig)])
pca.df$ID <- ensemble.preds$ID
#pca.df <- merge(pca.df, all.df[,c("ID", "Dx")], by="ID", all.x=TRUE)
pca.df <- merge(pca.df, ensemble.preds[,c("ID", "Dx")], by="ID", all.x=TRUE)
col_vector=c("firebrick",  "black", "lightgray", "blue3")
pca.df$Dx2 <- ifelse(pca.df$Dx=="amr", "AMR",
ifelse(pca.df$Dx=="tcmr", "TCMR",
ifelse(pca.df$Dx=="normal", "NR",
ifelse(pca.df$Dx=="other", "NRKI", pca.df$Dx))))
ggplot() + geom_point(data=pca.df, aes(Dim.1, Dim.2, color=Dx2), shape=19, size=4, alpha=0.6) +
#geom_text_repel(data=pca.df, aes(Dim.1, Dim.2, label=ID), size=2, colour="gray") +
scale_color_manual(values=col_vector) +
#ggsci::scale_color_d3() +
#ggsci::scale_color_igv() +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
ylab(paste("PC2 ", round(resPCA$eig[2,2]),"% of variance",sep="")) +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=14, angle=0),
panel.border=element_rect(colour="gray", fill=NA, size=1))
## assign cluster w/ largest coef
aa_preds <- data.frame(coef(aa_model))
rownames(aa_preds) <- ensemble.preds$ID
aa_preds$aa_cluster <- as.character(max.col(coef(aa_model)))
aa_preds$ID <- rownames(aa_preds)
pca.aa.df <- merge(pca.df, aa_preds, by="ID")
ggplot() +
geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=aa_cluster), shape=21, color="gray", size=4, alpha=0.7) +
scale_fill_manual(values=col_vector) +
#ggsci::scale_color_d3() +
#geom_text_repel(data=pca.df, aes(Dim.1, Dim.2, label=ID), size=2.5, colour="gray") +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
ylab(paste("PC2 ", round(resPCA$eig[2,2]),"% of variance",sep="")) +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=14, angle=0),
panel.border=element_rect(colour="gray", fill=NA, size=1))
#col_vector=c("lightgray", "firebrick", "blue3", "black")
col_vector=c("black", "firebrick", "blue3", "lightgray", "salmon", "turquoise")
ggplot() +
geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=aa_cluster), shape=21, color="gray", size=4, alpha=0.7) +
scale_fill_manual(values=col_vector) +
#ggsci::scale_color_d3() +
#geom_text_repel(data=pca.df, aes(Dim.1, Dim.2, label=ID), size=2.5, colour="gray") +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
ylab(paste("PC2 ", round(resPCA$eig[2,2]),"% of variance",sep="")) +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=14, angle=0),
panel.border=element_rect(colour="gray", fill=NA, size=1))
g1<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X1), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="black", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("NR") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="black"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
g2<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X2), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="firebrick", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("AMR") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="firebrick"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
g4<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X4), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="gray", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("NRKI") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="gray"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
g3<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X3), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="blue3", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("TCMR") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="blue3"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
gridExtra::grid.arrange(g3, g2, g1, g4, ncol=2, nrow=2)
head(pca.aa.df)
table(pca.aa.df[pca.aa.df$aa_cluster==4,"Dx"])
table(pca.aa.df[pca.aa.df$aa_cluster==2,"Dx"])
pca.df <- as.data.frame(resPCA$ind$coord[,1:nrow(resPCA$eig)])
pca.df$ID <- ensemble.preds$ID
#pca.df <- merge(pca.df, all.df[,c("ID", "Dx")], by="ID", all.x=TRUE)
pca.df <- merge(pca.df, ensemble.preds[,c("ID", "Dx", "Dx_complete")], by="ID", all.x=TRUE)
col_vector=c("firebrick",  "black", "lightgray", "blue3")
pca.df$Dx2 <- ifelse(pca.df$Dx=="amr", "AMR",
ifelse(pca.df$Dx=="tcmr", "TCMR",
ifelse(pca.df$Dx=="normal", "NR",
ifelse(pca.df$Dx=="other", "NRKI", pca.df$Dx))))
ggplot() + geom_point(data=pca.df, aes(Dim.1, Dim.2, color=Dx2), shape=19, size=4, alpha=0.6) +
#geom_text_repel(data=pca.df, aes(Dim.1, Dim.2, label=ID), size=2, colour="gray") +
scale_color_manual(values=col_vector) +
#ggsci::scale_color_d3() +
#ggsci::scale_color_igv() +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
ylab(paste("PC2 ", round(resPCA$eig[2,2]),"% of variance",sep="")) +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=14, angle=0),
panel.border=element_rect(colour="gray", fill=NA, size=1))
## assign cluster w/ largest coef
aa_preds <- data.frame(coef(aa_model))
rownames(aa_preds) <- ensemble.preds$ID
aa_preds$aa_cluster <- as.character(max.col(coef(aa_model)))
aa_preds$ID <- rownames(aa_preds)
pca.aa.df <- merge(pca.df, aa_preds, by="ID")
#col_vector=c("lightgray", "firebrick", "blue3", "black")
col_vector=c("black", "firebrick", "blue3", "lightgray", "salmon", "turquoise")
ggplot() +
geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=aa_cluster), shape=21, color="gray", size=4, alpha=0.7) +
scale_fill_manual(values=col_vector) +
#ggsci::scale_color_d3() +
#geom_text_repel(data=pca.df, aes(Dim.1, Dim.2, label=ID), size=2.5, colour="gray") +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
ylab(paste("PC2 ", round(resPCA$eig[2,2]),"% of variance",sep="")) +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=14, angle=0),
panel.border=element_rect(colour="gray", fill=NA, size=1))
table(pca.aa.df[pca.aa.df$aa_cluster==2,"Dx_complete"])
table(pca.aa.df[pca.aa.df$aa_cluster==4,"Dx_complete"])
aa_model <- bestModel(aa[[4]])
##---------
## apply to test data:
test.aa <- data.frame(predict(aa_model, newdata=test.preds.ens[,c("amr", "tcmr", "normal")]))
test.aa$aa_cluster <- as.character(max.col(test.aa))
test.aa$ID <- test.preds.ens$ID
## combine scores + clusters + clin data
test.preds.all <- merge(test.aa, test.preds.ens, by="ID")
##---------
## apply to test data:
test.aa <- data.frame(predict(aa_model, newdata=test.preds[,c("amr", "tcmr", "normal")]))
test.aa$aa_cluster <- as.character(max.col(test.aa))
test.aa$ID <- test.preds$ID
## combine scores + clusters + clin data
test.preds.all <- merge(test.aa, test.preds, by="ID")
test.preds.all$Dx <- NULL
test.preds.all <- merge(test.preds.all, test.df, by="ID")
head(test.preds.all)
## assign cluster w/ largest coef
aa_preds <- data.frame(coef(aa_model))
aa_model <- bestModel(aa[[4]])
## assign cluster w/ largest coef
aa_preds <- data.frame(coef(aa_model))
rownames(aa_preds) <- ensemble.preds$ID
aa_preds$aa_cluster <- as.character(max.col(coef(aa_model)))
aa_preds$ID <- rownames(aa_preds)
pca.aa.df <- merge(pca.df, aa_preds, by="ID")
#col_vector=c("lightgray", "firebrick", "blue3", "black")
col_vector=c("black", "firebrick", "blue3", "lightgray", "salmon", "turquoise")
ggplot() +
geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=aa_cluster), shape=21, color="gray", size=4, alpha=0.7) +
scale_fill_manual(values=col_vector) +
#ggsci::scale_color_d3() +
#geom_text_repel(data=pca.df, aes(Dim.1, Dim.2, label=ID), size=2.5, colour="gray") +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
ylab(paste("PC2 ", round(resPCA$eig[2,2]),"% of variance",sep="")) +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=14, angle=0),
panel.border=element_rect(colour="gray", fill=NA, size=1))
#col_vector=c("lightgray", "firebrick", "blue3", "black")
col_vector=c("black", "lightgray", "blue3", "firebrick", "salmon")
ggplot() +
geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=aa_cluster), shape=21, color="gray", size=4, alpha=0.7) +
scale_fill_manual(values=col_vector) +
#ggsci::scale_color_d3() +
#geom_text_repel(data=pca.df, aes(Dim.1, Dim.2, label=ID), size=2.5, colour="gray") +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
ylab(paste("PC2 ", round(resPCA$eig[2,2]),"% of variance",sep="")) +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=14, angle=0),
panel.border=element_rect(colour="gray", fill=NA, size=1))
#col_vector=c("lightgray", "firebrick", "blue3", "black")
col_vector=c("black", "blue3", "lightgray", "firebrick", "salmon")
ggplot() +
geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=aa_cluster), shape=21, color="gray", size=4, alpha=0.7) +
scale_fill_manual(values=col_vector) +
#ggsci::scale_color_d3() +
#geom_text_repel(data=pca.df, aes(Dim.1, Dim.2, label=ID), size=2.5, colour="gray") +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
ylab(paste("PC2 ", round(resPCA$eig[2,2]),"% of variance",sep="")) +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=14, angle=0),
panel.border=element_rect(colour="gray", fill=NA, size=1))
g1<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X1), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="black", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("NR") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="black"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
g2<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X2), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="firebrick", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("AMR") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="firebrick"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
g4<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X4), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="gray", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("NRKI") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="gray"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
g3<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X3), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="blue3", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("TCMR") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="blue3"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
gridExtra::grid.arrange(g3, g2, g1, g4, ncol=2, nrow=2)
g1<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X1), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="black", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("NR") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="black"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
g4<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X4), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="firebrick", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("AMR") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="firebrick"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
g3<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X3), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="gray", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("NRKI") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="gray"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
g2<-ggplot() + geom_point(data=pca.aa.df, aes(Dim.1, Dim.2, fill=X2), shape=21, color="gray", size=4, alpha=1) +
scale_fill_gradient2(limits=c(0, 1), midpoint=0.2, breaks=c(0, 0.5, 1), high="blue3", low="ivory") +
xlab("PC1") + ylab("PC2") + ggtitle("TCMR") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=12, angle=0),
axis.title=element_text(face="bold", size=12, angle=0),
plot.title=element_text(face="bold", size=14, vjust = -10, color="blue3"),
panel.border=element_rect(colour="lightgray", fill=NA, size=1))
gridExtra::grid.arrange(g3, g2, g1, g4, ncol=2, nrow=2)
gridExtra::grid.arrange(g4, g2, g1, g3, ncol=2, nrow=2)
gridExtra::grid.arrange(g2, g4, g1, g3, ncol=2, nrow=2)
## Dx counts per cluster
df1 <- data.frame(table(pca.df[pca.df$aa_cluster==1,"Dx"]))
colnames(df1) <- c("Dx", "k1")
df2 <- data.frame(table(pca.df[pca.df$aa_cluster==2,"Dx"]))
colnames(df2) <- c("Dx", "k2")
## Dx counts per cluster
df1 <- data.frame(table(pca.aa.df[pca.aa.df$aa_cluster==1,"Dx"]))
colnames(df1) <- c("Dx", "k1")
df2 <- data.frame(table(pca.aa.df[pca.aa.df$aa_cluster==2,"Dx"]))
colnames(df2) <- c("Dx", "k2")
df3 <- data.frame(table(pca.aa.df[pca.aa.df$aa_cluster==3,"Dx"]))
colnames(df3) <- c("Dx", "k3")
df4 <-data.frame(table(pca.aa.df[pca.aa.df$aa_cluster==4,"Dx"]))
colnames(df4) <- c("Dx", "k4")
k.df <- Reduce(function(x,y) merge(x, y, all=TRUE, by=c("Dx")), list(df1,df2,df3,df4))
rownames(k.df) <- k.df$Dx
k.df$Dx <- NULL
round(apply(k.df, 1, function(x) {x/sum(x, na.rm=TRUE)*100}), 1)
## plot % of samples with given Dx by cluster
aa.dx <- pca.df[,c("Dx", "aa_cluster")]
aa.dx %>% group_by(aa_cluster)
## plot % of samples with given Dx by cluster
aa.dx <- pca.aa.df[,c("Dx", "aa_cluster")]
aa.dx %>% group_by(aa_cluster)
##-----------------------------------------------------
## save model coefs + molecular score table
##-----------------------------------------------------
dir.create(paste0(outPath, "/tables/"), recursive=TRUE)
dir.create(paste0(outPath, "/models/"), recursive=TRUE)
outPath
## save experimental design
write.table(exp_design[exp_design$ID %in% train.df$ID,], file=paste0(outPath, "/tables/exp_design.txt"), quote=F, row.names=F, sep='\t')
## save raw counts + annotations: all genes excluding housekeeping outliers
train_raw <- ns.counts.train
train_raw <- train_raw[!rownames(train_raw) %in% hk_exclude,]
write.table(train_raw, file=paste0(outPath, "/tables/refset_counts_raw.txt"), quote=F, row.names=F, sep='\t')
## normalized gene counts: endogenous genes
train_norm_endo <- data.frame(ptg_train_norm, check.names=FALSE)
train_norm_endo$ID <- rownames(train_norm_endo)
train_norm_endo <- train_norm_endo %>% dplyr::select(ID, everything())
write.table(train_norm_endo, file=paste0(outPath, "/tables/refset_counts_norm.txt"), quote=F, row.names=F, sep='\t')
## save archetype model to predict new archetype
save(aa_model, file=paste0(outPath, "/models/aa_model.rda"))
## Banff lesion scores
banff_tab <- train.df[,grep("ID|Dx|score", colnames(train.df))]
banff_tab <- banff_tab[,grep("old|check", colnames(banff_tab), invert=TRUE)]
write.table(banff_tab, file=paste0(outPath, "/tables/refset_molecular_scores_banff.txt"), row.names=F, quote=F, sep='\t')
## ensemble Dx scores + cluster probs + max cluster + Dx + Dx simple (ie. outcomes used in model dev)
mscores_aa <- merge(train.preds.ens, pca.df[grep("ID|aa_cluster|X", colnames(pca.df))], all.x=TRUE) #cluster + scores
colnames(mscores_aa)[colnames(mscores_aa)=="Dx"]<-"Dx_simple"
mscores_aa_dx <- merge(train.df[c("ID", "Dx")], mscores_aa, by="ID")
## ensemble Dx scores + cluster probs + max cluster + Dx + Dx simple (ie. outcomes used in model dev)
mscores_aa <- merge(train.preds.ens, pca.aa.df[grep("ID|aa_cluster|X", colnames(pca.aa.df))], all.x=TRUE) #cluster + scores
## ensemble Dx scores + cluster probs + max cluster + Dx + Dx simple (ie. outcomes used in model dev)
mscores_aa <- merge(train.preds, pca.aa.df[grep("ID|aa_cluster|X", colnames(pca.aa.df))], all.x=TRUE) #cluster + scores
colnames(mscores_aa)[colnames(mscores_aa)=="Dx"]<-"Dx_simple"
mscores_aa_dx <- merge(train.df[c("ID", "Dx")], mscores_aa, by="ID")
## ensemble Dx scores + cluster probs + max cluster + Dx + Dx simple (ie. outcomes used in model dev)
mscores_aa <- merge(train.preds, pca.aa.df[grep("ID|aa_cluster|X", colnames(pca.aa.df))], all.x=TRUE) #cluster + scores
head(v)
head(mscores_aa)
mscores_aa$Dx
mscores_aa$Dx_simple
## ensemble Dx scores + cluster probs + max cluster + Dx + Dx simple (ie. outcomes used in model dev)
mscores_aa <- merge(train.preds, pca.aa.df[grep("ID|aa_cluster|X", colnames(pca.aa.df))], all.x=TRUE) #cluster + scores
colnames(mscores_aa)[colnames(mscores_aa)=="Dx"]<-"Dx_simple"
head(train.df[c("ID", "Dx")])
head(train.df)
train.df$Dx
## ensemble Dx scores + cluster probs + max cluster + Dx + Dx simple (ie. outcomes used in model dev)
mscores_aa <- merge(train.preds, pca.aa.df[grep("ID|aa_cluster|X", colnames(pca.aa.df))], all.x=TRUE) #cluster + scores
colnames(mscores_aa)[colnames(mscores_aa)=="Dx"]<-"Dx_simple"
mscores_aa_dx <- merge(train.df[c("ID", "Dx")], mscores_aa, by="ID")
head(mscores_aa)
## ensemble Dx scores + cluster probs + max cluster + Dx + Dx simple (ie. outcomes used in model dev)
mscores_aa <- merge(train.preds, pca.aa.df[grep("ID|aa_cluster|X", colnames(pca.aa.df))], all.x=TRUE) #cluster + scores
mscores_aa$ID
train.df$ID
train.df[c("ID", "Dx")]
## ensemble Dx scores + cluster probs + max cluster + Dx + Dx simple (ie. outcomes used in model dev)
mscores_aa <- merge(train.preds, pca.aa.df[grep("ID|aa_cluster|X", colnames(pca.aa.df))], all.x=TRUE) #cluster + scores
colnames(mscores_aa)[colnames(mscores_aa)=="Dx"]<-"Dx_simple"
mscores_aa_dx <- merge(train.df[c("ID", "Dx_complete")], mscores_aa, by="ID")
mscores_aa_dx[,grep("X", colnames(mscores_aa_dx))]<-round(mscores_aa_dx[,grep("X", colnames(mscores_aa_dx))], 4)
mscores_aa_dx <- mscores_aa_dx[,grep("ID|Dx|amr|tcmr|normal|aa_cluster|X", colnames(mscores_aa_dx))]
head(mscores_aa_dx)
head(pca.aa.df)
pca.aa.df$Dx_complete<-NULL
pca.aa.df$Dx
train.df[c("ID", "Dx_complete")]
## ensemble Dx scores + cluster probs + max cluster + Dx + Dx simple (ie. outcomes used in model dev)
pca.aa.df$Dx_complete<-NULL
pca.aa.df$Dx2<-NULL
mscores_aa <- merge(train.preds, pca.aa.df[grep("ID|aa_cluster|X", colnames(pca.aa.df))], all.x=TRUE) #cluster + scores
#colnames(mscores_aa)[colnames(mscores_aa)=="Dx"]<-"Dx_simple"
mscores_aa_dx <- merge(train.df[c("ID", "Dx_complete")], mscores_aa, by="ID")
mscores_aa_dx[,grep("X", colnames(mscores_aa_dx))]<-round(mscores_aa_dx[,grep("X", colnames(mscores_aa_dx))], 4)
mscores_aa_dx <- mscores_aa_dx[,grep("ID|Dx|amr|tcmr|normal|aa_cluster|X", colnames(mscores_aa_dx))]
## ensemble Dx scores + cluster probs + max cluster + Dx + Dx simple (ie. outcomes used in model dev)
pca.aa.df$Dx_complete<-NULL
pca.aa.df$Dx2<-NULL
mscores_aa <- merge(train.preds, pca.aa.df[grep("ID|aa_cluster|X", colnames(pca.aa.df))], all.x=TRUE) #cluster + scores
colnames(mscores_aa)[colnames(mscores_aa)=="Dx"]<-"Dx_simple"
mscores_aa_dx <- merge(train.df[c("ID", "Dx_complete")], mscores_aa, by="ID")
mscores_aa_dx[,grep("X", colnames(mscores_aa_dx))]<-round(mscores_aa_dx[,grep("X", colnames(mscores_aa_dx))], 4)
mscores_aa_dx <- mscores_aa_dx[,grep("ID|Dx|amr|tcmr|normal|aa_cluster|X", colnames(mscores_aa_dx))]
mscores_aa
## ensemble Dx scores + cluster probs + max cluster + Dx + Dx simple (ie. outcomes used in model dev)
pca.aa.df$Dx_complete<-NULL
pca.aa.df$Dx2<-NULL
mscores_aa <- merge(train.preds, pca.aa.df[grep("ID|aa_cluster|X", colnames(pca.aa.df))], all.x=TRUE) #cluster + scores
mscores_aa$Dx_complete<-NULL
colnames(mscores_aa)[colnames(mscores_aa)=="Dx"]<-"Dx_simple"
mscores_aa_dx <- merge(train.df[c("ID", "Dx_complete")], mscores_aa, by="ID")
mscores_aa_dx[,grep("X", colnames(mscores_aa_dx))]<-round(mscores_aa_dx[,grep("X", colnames(mscores_aa_dx))], 4)
mscores_aa_dx <- mscores_aa_dx[,grep("ID|Dx|amr|tcmr|normal|aa_cluster|X", colnames(mscores_aa_dx))]
mscores_aa_dx$Dx_complete
mscores_aa_dx$Dx_simple
mscores_aa_dx$Dx
mscores_aa <- merge(train.preds, pca.aa.df[grep("ID|aa_cluster|X", colnames(pca.aa.df))], all.x=TRUE) #cluster + scores
mscores_aa$Dx_complete<-NULL
#colnames(mscores_aa)[colnames(mscores_aa)=="Dx"]<-"Dx_simple"
mscores_aa_dx <- merge(train.df[c("ID", "Dx_complete")], mscores_aa, by="ID")
mscores_aa_dx[,grep("X", colnames(mscores_aa_dx))]<-round(mscores_aa_dx[,grep("X", colnames(mscores_aa_dx))], 4)
mscores_aa_dx <- mscores_aa_dx[,grep("ID|Dx|amr|tcmr|normal|aa_cluster|X", colnames(mscores_aa_dx))]
mscores_aa_dx$Dx
head(mscores_aa_dx)
write.table(mscores_aa_dx, file=paste0(outPath, "/tables/refset_molecular_scores_dx_aa.txt"), row.names=F, quote=F, sep='\t')
outPath
##-----------------------------------------------------
## Banff scores by cluster
pca.aa.df <- merge(pca.aa.df, ref.df[c("ID", "g_score", "ptc_score", "i_score", "t_score", "v_score", "cg_score")], by="ID", all.x=TRUE)
k1.df <- pca.aa.df[pca.aa.df$aa_cluster==1,c("g_score", "ptc_score", "i_score", "t_score", "v_score", "cg_score")]
k2.df <- pca.aa.df[pca.aa.df$aa_cluster==2,c("g_score", "ptc_score", "i_score", "t_score", "v_score", "cg_score")]
k3.df <- pca.aa.df[pca.aa.df$aa_cluster==3,c("g_score", "ptc_score", "i_score", "t_score", "v_score", "cg_score")]
k4.df <- pca.aa.df[pca.aa.df$aa_cluster==4,c("g_score", "ptc_score", "i_score", "t_score", "v_score", "cg_score")]
colnames(k1.df) <- gsub("_score", "", colnames(k1.df))
colnames(k2.df) <- gsub("_score", "", colnames(k4.df))
colnames(k3.df) <- gsub("_score", "", colnames(k3.df))
colnames(k4.df) <- gsub("_score", "", colnames(k4.df))
## barplots banff scores by cluster
plot_k <- function(k_df, cluster) {
df.tab <- apply(k_df, 2, function(x) { table(x, useNA="no") } )
#data.frame(rbind(t(table(stack(d[, -1]), useNA = "always"))))
## if not all scores have all values 0-3
if ( class(df.tab)=="list" ) {
df.banff <- plyr::ldply(df.tab, rbind)
df.banff[is.na(df.banff)]<-0
df.banff <- data.frame(t(df.banff))
colnames(df.banff) <- df.banff[rownames(df.banff) == ".id",]
df.banff <- df.banff[!rownames(df.banff) %in% ".id",]
df.banff$score <- rownames(df.banff)
df.banff[!colnames(df.banff) %in% c("score")] <- apply(df.banff[!colnames(df.banff) %in% c("score")], 2, as.numeric)
df.banff <- df.banff[order(df.banff$score, decreasing=F),]
df.banff$score <- NULL
} else {
df.banff <- df.tab #rows=0-3, cols=lesion names
}
df.pct <- apply(df.banff, 2, function(x) {x/sum(x, na.rm=TRUE)*100})
df.banff <- data.table::melt(df.pct)
df.banff$Var1 <- factor(df.banff$Var1, levels=c("3", "2", "1", "0"))
df.banff$Var2 <- factor(df.banff$Var2, levels=colnames(df.pct))
#my_cols=c("#EFF3FF", "#BDD7E7", "#6BAED6", "darkblue")
if(all(rownames(df.pct) %in% c("2", "1", "0"))) {
my_cols=c("steelblue", "lightblue", "lightcyan")
} else if(all(rownames(df.pct) %in% c("1", "0"))) {
my_cols=c("lightblue", "lightcyan")
} else {
my_cols=c("steelblue4", "steelblue", "lightblue", "lightcyan")
}
na.omit(df.banff) %>% ggplot() +
ggtitle(paste("cluster", cluster)) +
ylab("% biopsies") + xlab("Banff score") +
geom_bar(aes(x=Var2, y=value, fill=Var1), color="black", stat="identity", alpha=1, width=0.7) +
scale_fill_manual("score", values=my_cols) +
coord_flip() +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="white"),
title=element_text(size=12, color="gray27", face="bold"),
legend.title=element_blank(),
axis.text=element_text(size=14, color="gray27"),
axis.title.x=element_text(size=14, color="gray27", face="bold"),
axis.title.y=element_blank(),
legend.text=element_text(size=12, color="gray27"), legend.key.size = unit(0.5, 'cm'),
panel.border=element_rect(colour="gray", fill=NA, size=1))
}
g1 <- plot_k(k_df=k1.df, cluster="1")
g2 <- plot_k(k2.df, cluster="2")
g3 <- plot_k(k_df=k3.df, cluster="3")
g4 <- plot_k(k4.df, cluster="4")
gridExtra::grid.arrange(g1, g2, g3, g4, ncol=2, nrow=2)
