geneannot <- gtf
geneannot
head(countTable)
countTable$gene_id %in% geneannot$gene_id
countTable$gene_id %in% geneannot$gene_id
all(countTable$gene_id %in% geneannot$gene_id)
## Annotated expression table
geneannot[grep("PVT1", geneannot$gene_name),]
geneannot[grep("PVT1", geneannot$gene_name),]
ge <- merge(geneannot, countTable, by = "gene_id")
head(ge)
ge <- merge(geneannot, countTable, by = "gene_id")
ge.annot <- ge
rownames(ge) <- ge$gene_name2
head(ge)
ge<-ge[-(1:6)]
ge<-ge[apply(ge, MARGIN=1, function(x) { any(x>0) }),]
ge.cpm <- cpm(ge, log=F)
plot(ge.cpm[,1], ge[,1])
plot(ge.cpm[,1],ge[,1],ylim=c(0,50),xlim=c(0,3))
keep.exprs <- rowSums(ge.cpm>0.5)>=2
ge <- ge[keep.exprs,]
ge.tmp<-ge.geneannot
rownames(ge.tmp)<-ge.tmp$gene_id
ge.tmp<-ge.tmp[-(1:6)]
ge.id<-ge.tmp[apply(ge.tmp, MARGIN=1, function(x) { any(x>0) }),]
ge.id
ge.tmp<-ge.annot
rownames(ge.tmp)
ge.tmp<-ge.annot
rownames(ge.tmp)<-ge.tmp$gene_id
ge.tmp<-ge.tmp[-(1:6)]
ge.id<-ge.tmp[apply(ge.tmp, MARGIN=1, function(x) { any(x>0) }),]
ge.id
head(ge.id)
colnames(ge)
condition=c("WT", "WT", "WT", "KO", "KO", "KO")
exp.all <- data.frame(samples=colnames(ge),
condition=condition)
exp.all
condition=c("KO", "KO", "KO", "WT", "WT", "WT")
exp.all <- data.frame(samples=colnames(ge),
condition=condition)
exp.all
condition<-factor(condition)
dds <- DESeqDataSetFromMatrix(ge, DataFrame(condition), ~condition)
ge.rlog <- rlog(dds, blind = FALSE)
ge.rlog <- assay(ge.rlog)
rc<-data.frame(counts=colSums(ge))
print(xtable(format(rc, scientific=F), caption="Raw Read counts"), comment=F)
plot(hclust(as.dist(1 - cor(ge.rlog, method = "spearman")), method="ward.D"), label=colnames(ge))
resPCA <- PCA(t(ge.rlog), scale.unit=FALSE, graph=FALSE)
label=rownames(resPCA$ind$coord)
ggplot(as.data.frame(resPCA$ind$coord), aes(x=resPCA$ind$coord[,1],y=resPCA$ind$coord[,2], label=label)) +
geom_point() + xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
ylab(paste("PC2 ",round(resPCA$eig[2,2]),"% of variance",sep="")) + geom_text(vjust=1.5) +
geom_hline(yintercept=0, linetype="dashed") +
geom_vline(xintercept=0, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
axis.text=element_text(size=14),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14), panel.border=element_rect(colour="black", fill=NA, size=1))
ggplot(as.data.frame(resPCA$ind$coord), aes(x=resPCA$ind$coord[,1],y=resPCA$ind$coord[,2], label=label)) +
geom_point(size=3) + xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
ylab(paste("PC2 ",round(resPCA$eig[2,2]),"% of variance",sep="")) + geom_text(vjust=1.5) +
geom_hline(yintercept=0, linetype="dashed") +
geom_vline(xintercept=0, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
axis.text=element_text(size=14),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14), panel.border=element_rect(colour="black", fill=NA, size=1))
rep("blue3", 3)
col_vector=c(rep("blue3", 3), rep("dodgerblue", 3))
ggplot(as.data.frame(resPCA$ind$coord), aes(x=resPCA$ind$coord[,1],y=resPCA$ind$coord[,2], label=label)) +
geom_point(size=3) + xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
scale_fill_manual(values=col_vector) +
ylab(paste("PC2 ",round(resPCA$eig[2,2]),"% of variance",sep="")) + geom_text(vjust=1.5) +
geom_hline(yintercept=0, linetype="dashed") +
geom_vline(xintercept=0, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
axis.text=element_text(size=14),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14), panel.border=element_rect(colour="black", fill=NA, size=1))
head(resPCA)
pca.df <- as.data.frame(resPCA$ind$coord)
head(pca.df)
pca.df$ID <- rownames(pca.df)
head(pca.df)
pca.df <- merge(pca.df, exp.all, by="ID")
exp.all
exp.all <- data.frame(ID=colnames(ge),
condition=condition)
exp.all
resPCA <- PCA(t(ge.rlog), scale.unit=FALSE, graph=FALSE)
pca.df <- as.data.frame(resPCA$ind$coord)
pca.df$ID <- rownames(pca.df)
pca.df <- merge(pca.df, exp.all, by="ID")
head(pca.df)
ggplot(pca.df, aes(x=Dim.1, y=Dim.2, label=ID, fill=condition)) +
geom_point(size=3) + xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
scale_fill_manual(values=col_vector) +
ylab(paste("PC2 ",round(resPCA$eig[2,2]),"% of variance",sep="")) + geom_text(vjust=1.5) +
geom_hline(yintercept=0, linetype="dashed") +
geom_vline(xintercept=0, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
axis.text=element_text(size=14),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14), panel.border=element_rect(colour="black", fill=NA, size=1))
ggplot(pca.df) +
geom_point(aes(x=Dim.1, y=Dim.2, label=ID, fill=condition), size=3) +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
scale_fill_manual(values=col_vector) +
ylab(paste("PC2 ",round(resPCA$eig[2,2]),"% of variance",sep="")) + geom_text(vjust=1.5) +
geom_hline(yintercept=0, linetype="dashed") +
geom_vline(xintercept=0, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
axis.text=element_text(size=14),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14), panel.border=element_rect(colour="black", fill=NA, size=1))
ggplot() + geom_point(data=pca.df, aes(x=Dim.1, y=Dim.2, label=ID, fill=condition), size=3) +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
scale_fill_manual(values=col_vector) +
ylab(paste("PC2 ",round(resPCA$eig[2,2]),"% of variance",sep="")) + geom_text(vjust=1.5) +
geom_hline(yintercept=0, linetype="dashed") +
geom_vline(xintercept=0, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
axis.text=element_text(size=14),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14), panel.border=element_rect(colour="black", fill=NA, size=1))
ggplot() + geom_point(data=pca.df, aes(x=Dim.1, y=Dim.2, fill=condition), size=3) +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
scale_fill_manual(values=col_vector) +
ylab(paste("PC2 ",round(resPCA$eig[2,2]),"% of variance",sep="")) + geom_text(vjust=1.5) +
geom_hline(yintercept=0, linetype="dashed") +
geom_vline(xintercept=0, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
axis.text=element_text(size=14),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14), panel.border=element_rect(colour="black", fill=NA, size=1))
head9pca.df
head(pca.df)
ggplot() +
geom_point(data=pca.df, aes(Dim.1, Dim.2, fill=condition), shape=21, color="gray", size=3, alpha=0.8) +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
scale_fill_manual(values=col_vector) +
ylab(paste("PC2 ",round(resPCA$eig[2,2]),"% of variance",sep="")) + geom_text(vjust=1.5) +
geom_hline(yintercept=0, linetype="dashed") +
geom_vline(xintercept=0, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
axis.text=element_text(size=14),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14), panel.border=element_rect(colour="black", fill=NA, size=1))
col_vector
col_vector=c("blue3", "dodgerblue")
ggplot() +
geom_point(data=pca.df, aes(Dim.1, Dim.2, fill=condition), shape=21, color="gray", size=4) +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
scale_fill_manual(values=col_vector)
ggplot() +
geom_point(data=pca.df, aes(Dim.1, Dim.2, fill=condition), shape=21, color="gray", size=4) +
xlab(paste("PC1 ", round(resPCA$eig[1,2]),"% of variance",sep="")) +
scale_fill_manual(values=col_vector) +
ylab(paste("PC2 ",round(resPCA$eig[2,2]),"% of variance",sep="")) + geom_text(vjust=1.5) +
geom_hline(yintercept=0, linetype="dashed") +
geom_vline(xintercept=0, linetype="dashed") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
axis.text=element_text(size=14),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14), panel.border=element_rect(colour="black", fill=NA, size=1))
## select conditions to compare
exp.sel<-c("KO", "WT")
exp <- exp.all[exp.all$condition %in% exp.sel,]
exp
ge.filt <- ge[colnames(ge) %in% exp$ID]
head(ge.filt)
dge<-DGEList(counts=ge.filt[,colnames(ge.filt)], genes=rownames(ge.filt), group=exp$condition)
cond <- factor(exp$condition)
model <- model.matrix(~0+cond)
colnames(model) <- levels(cond)
rownames(model) <- exp$samples
dge <- calcNormFactors(dge, method="TMM")
v <- voom(dge, model, plot=FALSE)
vfit <- lmFit(v, model)
contr.matrix <- makeContrasts(
KOvsWT = KO - WT,
levels = colnames(model))
vfit.c <- contrasts.fit(vfit, contrasts=contr.matrix)
efit <- eBayes(vfit.c)
dt<-decideTests(efit, adjust.method = "BH", p.value = 0.05, lfc=1)
dt.ko<-dt
tt <- topTreat(efit, n=Inf, adjust.method="BH", p.value=0.05, lfc=1)
top.p<-topTable(efit, adjust.method="BH", p.value=0.05, sort.by="p")
top.p<-data.frame(genes=top.p$genes, logFC=top.p$logFC, AveExpr=top.p$AveExpr,
P.Value=format(top.p$P.Value, scientific=TRUE),
adj.P.Val=format(top.p$adj.P.Val, scientific=TRUE))
top.p
head(top.p)
hist(top.p$P.Value)
hist(as.numeric(top.p$P.Value))
as.numeric(top.p$P.Value)
model
exp.sel<-c("KO", "WT")
## limma+voom: input raw data: apply log2CPM norm with voom
exp <- exp.all[exp.all$condition %in% exp.sel,]
ge.filt <- ge[colnames(ge) %in% exp$ID]
dge<-DGEList(counts=ge.filt[,colnames(ge.filt)], genes=rownames(ge.filt), group=exp$condition)
# design matrix for experimental conditions
cond <- factor(exp$condition)
model <- model.matrix(~0+cond)
colnames(model) <- levels(cond)
rownames(model) <- exp$ID
model
dge <- calcNormFactors(dge, method="TMM")
## limma+voom: transform count data to log2(CPM) to estimate mean-variance relationship
v <- voom(dge, model, plot=FALSE)
vfit <- lmFit(v, model)
contr.matrix <- makeContrasts(
KOvsWT = KO - WT,
levels = colnames(model))
vfit.c <- contrasts.fit(vfit, contrasts=contr.matrix)
efit <- eBayes(vfit.c)
## DEGs
dt<-decideTests(efit, adjust.method = "BH", p.value = 0.05, lfc=1)
dt
tt <- topTreat(efit, n=Inf, adjust.method="BH", p.value=0.05, lfc=1)
head(tt)
tt$P.Value
hist(tt$P.Value)
head(dt)
?topTreat
nrow(tt)
df
ge.filt
dim(ge.filt)
exp <- exp.all
exp
exp <- exp.all
ge.filt <- ge[colnames(ge) %in% exp$ID]
dge<-DGEList(counts=ge.filt[,colnames(ge.filt)], genes=rownames(ge.filt), group=exp$condition)
# design matrix for experimental conditions
cond <- factor(exp$condition)
model <- model.matrix(~0+cond)
colnames(model) <- levels(cond)
rownames(model) <- exp$ID
## TMM Normalization
dge <- calcNormFactors(dge, method="TMM")
## limma+voom: transform count data to log2(CPM) to estimate mean-variance relationship
v <- voom(dge, model, plot=FALSE)
vfit <- lmFit(v, model)
contr.matrix <- makeContrasts(
KOvsWT = KO - WT,
levels = colnames(model))
vfit.c <- contrasts.fit(vfit, contrasts=contr.matrix)
efit <- eBayes(vfit.c)
efit
efit$p.value
head(efit$p.value)
efit$p.value[[1]]
efit$p.value[,1]
histogram(efit$p.value[,1])
hist(efit$p.value[,1])
hist(efit$p.value[,1])
dt<-decideTests(efit, adjust.method = "BH", p.value = 0.05, lfc=1)
dt<-decideTests(efit, adjust.method = "BH", p.value = 0.05)
## Top DE
#tt <- topTreat(efit, n=Inf, adjust.method="BH", p.value=0.05, lfc=1)
tt <- topTreat(efit, n=Inf, adjust.method="BH", p.value=0.05)
top.p<-topTable(efit, adjust.method="BH", p.value=0.05, sort.by="p")
top.p<-data.frame(genes=top.p$genes, logFC=top.p$logFC, AveExpr=top.p$AveExpr,
P.Value=format(top.p$P.Value, scientific=TRUE),
adj.P.Val=format(top.p$adj.P.Val, scientific=TRUE))
top.fc<-topTable(efit, adjust.method="BH", p.value=0.05, sort.by="logFC")
top.fc<-data.frame(genes=top.fc$genes, logFC=top.fc$logFC, AveExpr=top.fc$AveExpr,
P.Value=format(top.fc$P.Value, scientific=TRUE),
adj.P.Val=format(top.fc$adj.P.Val, scientific=TRUE))
tt.all <- topTreat(efit, n=Inf, adjust.method="BH")
df.fit<-data.frame(tt.all$genes, tt.all$logFC, -log10(tt.all$P.Value), -log10(tt.all$adj.P.Val), tt.all$AveExpr)
names(df.fit)<-c("genes", "logFC", "pval", "padj", "AveExpr")
df.fit.sig <- mutate(df.fit, sig=ifelse(tt.all$adj.P.Val<0.05, "sig", "not"))
volc = ggplot(df.fit.sig, aes(logFC, padj)) +
geom_point(aes(col=sig)) +
geom_vline(xintercept=1, linetype="dashed") + geom_vline(xintercept=-1, linetype="dashed") +
scale_color_manual(values=c("grey30", "firebrick"), guide=FALSE) +
ggtitle("BAP1 KO v. WT") + xlab("log2FC") + ylab("-log10qval")
volc+geom_text_repel(data=head(df.fit.sig, 15), aes(label=genes))
ggplot() +
geom_point(data=df.fit.sig, aes(x=logFC, y=padj, col=sig)) +
geom_text_repel(data=head(df.fit.sig, 15), aes(label=genes))
geom_vline(xintercept=1, linetype="dashed") + geom_vline(xintercept=-1, linetype="dashed") +
scale_color_manual(values=c("blue3", "dodgerblue"), guide=FALSE) +
ggtitle("PVT11 KO v. WT") + xlab("log2FC") + ylab("-log10qval") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(size=12),
axis.text.x=element_text(face="bold", size=12, angle=0),
axis.title.x=element_text(face="bold", size=12, angle=0),
axis.title.y=element_text(face="bold", size=12),
panel.border=element_rect(colour="white", fill=NA, linewidth=5))
ggplot() +
geom_point(data=df.fit.sig, aes(x=logFC, y=padj, col=sig))
ggplot() +
geom_point(data=df.fit.sig, aes(x=logFC, y=padj, col=sig)) +
geom_text_repel(data=head(df.fit.sig, 15), aes(label=genes)) +
geom_vline(xintercept=1, linetype="dashed") +geom_vline(xintercept=-1, linetype="dashed") +
scale_color_manual(values=c("blue3", "dodgerblue"), guide=FALSE) +
ggtitle("PVT11 KO v. WT") + xlab("log2FC") + ylab("-log10qval") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(size=12),
axis.text.x=element_text(face="bold", size=12, angle=0),
axis.title.x=element_text(face="bold", size=12, angle=0),
axis.title.y=element_text(face="bold", size=12),
panel.border=element_rect(colour="white", fill=NA, linewidth=5))
head(df.fit.sig, 15)
ggplot() +
geom_point(data=df.fit.sig, aes(x=logFC, y=padj, col=sig)) +
geom_text_repel(data=df.fit.sig[1:20,], aes(x=logFC, y=padj, label=genes), size=2, colour="gray") +
geom_vline(xintercept=1, linetype="dashed") +geom_vline(xintercept=-1, linetype="dashed") +
scale_color_manual(values=c("blue3", "dodgerblue"), guide=FALSE) +
ggtitle("PVT11 KO v. WT") + xlab("log2FC") + ylab("-log10qval") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(size=12),
axis.text.x=element_text(face="bold", size=12, angle=0),
axis.title.x=element_text(face="bold", size=12, angle=0),
axis.title.y=element_text(face="bold", size=12),
panel.border=element_rect(colour="white", fill=NA, linewidth=5))
ggplot() +
geom_point(data=df.fit.sig, aes(x=logFC, y=padj, col=sig)) +
geom_text_repel(data=df.fit.sig[1:20,], aes(x=logFC, y=padj, label=genes), size=2, colour="gray") +
geom_vline(xintercept=1, linetype="dashed") +geom_vline(xintercept=-1, linetype="dashed") +
scale_color_manual(values=c("steelblue", "salmon")) +
ggtitle("PVT11 KO v. WT") + xlab("log2FC") + ylab("-log10qval") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(size=12),
axis.text.x=element_text(face="bold", size=12, angle=0),
axis.title.x=element_text(face="bold", size=12, angle=0),
axis.title.y=element_text(face="bold", size=12),
panel.border=element_rect(colour="white", fill=NA, linewidth=5))
ggplot() +
geom_point(data=df.fit.sig, aes(x=logFC, y=padj, col=sig, size=3)) +
geom_text_repel(data=df.fit.sig[1:20,], aes(x=logFC, y=padj, label=genes), size=3, colour="gray") +
geom_vline(xintercept=1, linetype="dashed") +geom_vline(xintercept=-1, linetype="dashed") +
scale_color_manual(values=c("steelblue", "salmon")) +
ggtitle("PVT11 KO v. WT") + xlab("log2FC") + ylab("-log10qval") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(size=12),
axis.text.x=element_text(face="bold", size=12, angle=0),
axis.title.x=element_text(face="bold", size=12, angle=0),
axis.title.y=element_text(face="bold", size=12),
panel.border=element_rect(colour="white", fill=NA, linewidth=5))
ggplot() +
geom_point(data=df.fit.sig, aes(x=logFC, y=padj, col=sig), size=2) +
geom_text_repel(data=df.fit.sig[1:20,], aes(x=logFC, y=padj, label=genes), size=3, colour="gray") +
geom_vline(xintercept=1, linetype="dashed") +geom_vline(xintercept=-1, linetype="dashed") +
scale_color_manual(values=c("steelblue", "salmon")) +
ggtitle("PVT11 KO v. WT") + xlab("log2FC") + ylab("-log10qval") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(size=12),
axis.text.x=element_text(face="bold", size=12, angle=0),
axis.title.x=element_text(face="bold", size=12, angle=0),
axis.title.y=element_text(face="bold", size=12),
panel.border=element_rect(colour="white", fill=NA, linewidth=5))
ggplot() +
geom_point(data=df.fit.sig, aes(x=logFC, y=padj, col=sig), size=3) +
geom_text_repel(data=df.fit.sig[1:20,], aes(x=logFC, y=padj, label=genes), size=3, colour="gray") +
geom_vline(xintercept=1, linetype="dashed") +geom_vline(xintercept=-1, linetype="dashed") +
scale_color_manual(values=c("steelblue", "salmon"), guide=F) +
ggtitle("PVT11 KO v. WT") + xlab("log2FC") + ylab("-log10qval") +
theme(legend.position="top", legend.title=element_blank(),
panel.grid.minor=element_line(colour="gray"), panel.grid.major=element_blank(),
panel.background=element_blank(),
axis.line=element_line(colour="white"),
axis.text=element_text(size=12),
axis.text.x=element_text(face="bold", size=12, angle=0),
axis.title.x=element_text(face="bold", size=12, angle=0),
axis.title.y=element_text(face="bold", size=12),
panel.border=element_rect(colour="white", fill=NA, linewidth=5))
ggplot() + ylab("-log10(pval)") + xlab("log2FC") + ggtitle(plot_title) +
geom_point(data=df.fit.sig, aes(x=logFC, y=padj, color=sig), shape=19, size=4, alpha=0.7) +
geom_text_repel(data=head(df.fit, 20), aes(x=logFC, y=padj, label=genes), colour="gray", size=3) +
scale_color_manual(values=c("steelblue", "salmon")) +
geom_vline(xintercept=0, linetype="dashed", size=0.4) +
geom_vline(xintercept=1, linetype="dashed", size=0.2) +
geom_vline(xintercept=-1, size=0.2, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
panel.border=element_rect(colour="black", fill=NA, size=1),
plot.title = element_text(size=14, face = "bold"), legend.position="none",
axis.text=element_text(size=14, family="sans", colour="black"),
axis.title=element_text(size=14, family="sans", colour="black", face="bold"))
ggplot() + ylab("-log10(pval)") + xlab("log2FC") + ggtitle("PVT1 KO v. WT") +
geom_point(data=df.fit.sig, aes(x=logFC, y=padj, color=sig), shape=19, size=4, alpha=0.7) +
geom_text_repel(data=head(df.fit, 20), aes(x=logFC, y=padj, label=genes), colour="gray", size=3) +
scale_color_manual(values=c("steelblue", "salmon")) +
geom_vline(xintercept=0, linetype="dashed", size=0.4) +
geom_vline(xintercept=1, linetype="dashed", size=0.2) +
geom_vline(xintercept=-1, size=0.2, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
panel.border=element_rect(colour="black", fill=NA, size=1),
plot.title = element_text(size=14, face = "bold"), legend.position="none",
axis.text=element_text(size=14, family="sans", colour="black"),
axis.title=element_text(size=14, family="sans", colour="black", face="bold"))
nrow(df.fit.sig)
head(df.fit.sig)
ggplot() + ylab("-log10(pval)") + xlab("log2FC") + ggtitle("PVT1 KO v. WT") +
geom_point(data=df.fit.sig, aes(x=logFC, y=pval, color=sig), shape=19, size=4, alpha=0.7) +
geom_text_repel(data=head(df.fit, 20), aes(x=logFC, y=pval, label=genes), colour="gray", size=3) +
scale_color_manual(values=c("steelblue", "salmon")) +
geom_vline(xintercept=0, linetype="dashed", size=0.4) +
geom_vline(xintercept=1, linetype="dashed", size=0.2) +
geom_vline(xintercept=-1, size=0.2, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
panel.border=element_rect(colour="black", fill=NA, size=1),
plot.title = element_text(size=14, face = "bold"), legend.position="none",
axis.text=element_text(size=14, family="sans", colour="black"),
axis.title=element_text(size=14, family="sans", colour="black", face="bold"))
ggplot() + ylab("-log10(pval)") + xlab("log2FC") + ggtitle("PVT1 KO v. WT") +
geom_point(data=df.fit.sig, aes(x=logFC, y=pval, color=sig), shape=19, size=4, alpha=0.7) +
geom_text_repel(data=head(df.fit, 20), aes(x=logFC, y=pval, label=genes), colour="gray", size=3) +
scale_color_manual(values=c("steelblue", "salmon")) +
geom_vline(xintercept=0, linetype="dashed", size=0.4) +
geom_vline(xintercept=1, linetype="dashed", size=0.2) +
geom_vline(xintercept=-1, size=0.2, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
panel.border=element_rect(colour="black", fill=NA, size=1),
plot.title = element_text(size=14, face = "bold"), legend.position="none",
axis.text=element_text(size=14, family="sans", colour="black"),
axis.title=element_text(size=14, family="sans", colour="black", face="bold"))
md = ggplot(df.fit.sig, aes(AveExpr, logFC)) +
geom_point(aes(col=sig), size=1) +
geom_hline(yintercept=0, linetype="dashed") +
scale_color_manual(values=c("grey30", "firebrick"), guide=FALSE) +
ggtitle("BAP1 KO v. WT") + coord_cartesian(xlim=c(-5,13), ylim=c(-10,10)) +
xlab("avg logCPM") + ylab("logFC") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
axis.text=element_text(size=14),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14), panel.border=element_rect(colour="black", fill=NA, size=1))
md + geom_text_repel(data=head(df.fit.sig, 10), aes(label=genes))
md = ggplot(df.fit.sig, aes(AveExpr, logFC)) +
geom_point(aes(col=sig), size=1) +
geom_hline(yintercept=0, linetype="dashed") +
scale_color_manual(values=c("grey30", "firebrick"), guide=FALSE) +
ggtitle("KO v. WT") + coord_cartesian(xlim=c(-5,13), ylim=c(-10,10)) +
xlab("avg logCPM") + ylab("logFC") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
axis.text=element_text(size=14),
axis.title.x=element_text(size=14),
axis.title.y=element_text(size=14), panel.border=element_rect(colour="black", fill=NA, size=1))
md + geom_text_repel(data=head(df.fit.sig, 10), aes(label=genes))
ggplot() + ylab("-log10(pval)") + xlab("log2FC") + ggtitle("PVT1 KO v. WT") +
geom_point(data=df.fit.sig, aes(x=logFC, y=pval, color=sig), shape=19, size=4, alpha=0.7) +
geom_text_repel(data=head(df.fit, 20), aes(x=logFC, y=pval, label=genes), colour="gray", size=3) +
scale_color_manual(values=c("steelblue", "salmon")) +
geom_vline(xintercept=0, linetype="dashed", size=0.4) +
geom_vline(xintercept=1, linetype="dashed", size=0.2) +
geom_vline(xintercept=-1, size=0.2, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
panel.border=element_rect(colour="black", fill=NA, size=1),
plot.title = element_text(size=14, face = "bold"), legend.position="none",
axis.text=element_text(size=14, family="sans", colour="black"),
axis.title=element_text(size=14, family="sans", colour="black", face="bold"))
ggplot() + ylab("-log10(pval)") + xlab("log2FC") + ggtitle("PVT1 KO v. WT") +
geom_point(data=df.fit.sig, aes(x=logFC, y=pval, color=sig), shape=19, size=4, alpha=0.7) +
geom_text_repel(data=head(df.fit, 30), aes(x=logFC, y=pval, label=genes), colour="gray", size=3) +
scale_color_manual(values=c("steelblue", "salmon")) +
geom_vline(xintercept=0, linetype="dashed", size=0.4) +
geom_vline(xintercept=1, linetype="dashed", size=0.2) +
geom_vline(xintercept=-1, size=0.2, linetype="dashed") +
theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.background=element_blank(), axis.line=element_line(colour="black"),
panel.border=element_rect(colour="black", fill=NA, size=1),
plot.title = element_text(size=14, face = "bold"), legend.position="none",
axis.text=element_text(size=14, family="sans", colour="black"),
axis.title=element_text(size=14, family="sans", colour="black", face="bold"))
head*df.fit.sig
head(df.fit.sig)
df.fit.sig[df.fit.sig$genes=="BMP4",]
df.fit.sig[df.fit.sig$genes=="EMC10",]
View(pca.df)
