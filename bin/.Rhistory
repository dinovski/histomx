cor(all.preds$AMR_score, all.preds$AMR_histomx_c)
cor(all.preds$TCMR_score, all.preds$TCMR_histomx_c)
?cor
hist(all.preds$AMR_score)
cor(all.preds$AMR_score, all.preds$AMR_histomx, method="spearman")
cor(all.preds$AMR_score, all.preds$AMR_histomx_c, method="spearman")
cor(all.preds$TCMR_score, all.preds$TCMR_histomx, method="spearman")
cor(all.preds$TCMR_score, all.preds$TCMR_histomx_c, method="spearman")
cor(all.preds$TCMR_histomx, all.preds$TCMR_histomx_c, method="spearman")
ggplot(data = all.preds, aes(x = all.preds$AMR_score, y = all.preds$AMR_histomx)) +
stat_poly_line() +
stat_poly_eq() +
geom_point()
library(ggpmisc)
install.packages("ggpmisc")
ggplot(data = all.preds, aes(x = all.preds$AMR_score, y = all.preds$AMR_histomx)) +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method="lm",se=FALSE) +
geom_point() + facet_wrap(~class)
library(devtools)
ggplot(data = all.preds, aes(x = all.preds$AMR_score, y = all.preds$AMR_histomx)) +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method="lm",se=FALSE) +
geom_point() + facet_wrap(~class)
??
??geom_smooth
library(ggplot2)
ggplot(data = all.preds, aes(x = all.preds$AMR_score, y = all.preds$AMR_histomx)) +
stat_smooth_func(geom="text",method="lm",hjust=0,parse=TRUE) +
geom_smooth(method="lm",se=FALSE) +
geom_point() + facet_wrap(~class)
cor(all.preds$AMR_score, all.preds$AMR_histomx, method="spearman")
cor(all.preds$AMR_score, all.preds$AMR_histomx_c, method="spearman")
cor(all.preds$TCMR_score, all.preds$TCMR_histomx, method="spearman")
cor(all.preds$TCMR_score, all.preds$TCMR_histomx_c, method="spearman")
cor(all.preds[all.preds$cohort=="mgh","TCMR_score"], all.preds[all.preds$cohort=="mgh","TCMR_histomx"], method="spearman")
table(all.preds$cohort)
cor(all.preds[all.preds$cohort=="ptg_test","TCMR_score"], all.preds[all.preds$cohort=="ptg_test","TCMR_histomx"], method="spearman")
cor(all.preds[all.preds$cohort=="mgh","TCMR_score"], all.preds[all.preds$cohort=="mgh","TCMR_histomx"], method="spearman")
cor(all.preds[all.preds$cohort=="alberta","TCMR_score"], all.preds[all.preds$cohort=="alberta","TCMR_histomx"], method="spearman")
cor(all.preds[all.preds$cohort=="ptg_test","AMR_score"], all.preds[all.preds$cohort=="ptg_test","AMR_histomx"], method="spearman")
cor(all.preds[all.preds$cohort=="mgh","AMR_score"], all.preds[all.preds$cohort=="mgh","AMR_histomx"], method="spearman")
cor(all.preds[all.preds$cohort=="alberta","AMR_score"], all.preds[all.preds$cohort=="alberta","AMR_histomx"], method="spearman")
cor
cor(all.preds[all.preds$cohort=="ptg_test","TCMR_score"], all.preds[all.preds$cohort=="ptg_test","TCMR_histomx"], method="spearman")
cor(all.preds[all.preds$cohort=="mgh","TCMR_score"], all.preds[all.preds$cohort=="mgh","TCMR_histomx"], method="spearman")
cor(all.preds[all.preds$cohort=="alberta","TCMR_score"], all.preds[all.preds$cohort=="alberta","TCMR_histomx"], method="spearman")
mean(0.759, 0.89, 0.642)
##---------
## evaluate ensemble predictions
##---------
test.preds <- all.preds[all.preds$cohort=="ptg_test",]
mgh.preds <- all.preds[all.preds$cohort=="mgh",]
ua.preds <- all.preds[all.preds$cohort=="alberta",]
## AMR
roc <- pROC::roc(ifelse(train.preds$Dx=="amr", 1, 0), train.preds$amr_median, quiet=TRUE)
amr_coords <- coords(roc, x="best", input="threshold", best.method="youden", transpose=F)
t(modelEval(true_values=ifelse(train.preds$Dx=="amr", 1, 0), predicted_values=train.preds$amr_median, threshold=amr_coords$threshold, print.results=FALSE))
## cohort norm
test.amr.c <- t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
mgh.amr.c <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
ua.amr.c <- t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
## HistoMx separate norm
test.amr.h <- t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
mgh.amr.h <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
ua.amr.h <- t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
## HstoMx combined norm
t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
test.amr.h
test.amr.h
## HstoMx combined norm
t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
mgh.amr.h
ua.amr.h
t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
## HstoMx combined norm
test.amr.c <-t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
mgh.amr.c <-t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
ua.amr.c <- t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
## TCMR
roc <- pROC::roc(ifelse(train.preds$Dx=="tcmr", 1, 0), train.preds$tcmr_median, quiet=TRUE)
tcmr_coords <- coords(roc, x="best", input="threshold", best.method="youden", transpose=F)
t(modelEval(true_values=ifelse(train.preds$Dx=="tcmr", 1, 0), predicted_values=train.preds$tcmr_median, threshold=tcmr_coords$threshold, print.results=FALSE))
## cohort norm
test.tcmr.c <- t(modelEval(true_values=ifelse(test.preds$Dx=="tcmr", 1, 0), predicted_values=test.preds$TCMR_score, threshold=tcmr_coords$threshold, print.results=FALSE))
mgh.tcmr.c <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="tcmr", 1, 0), predicted_values=mgh.preds$TCMR_score, threshold=tcmr_coords$threshold, print.results=FALSE))
ua.tcmr.c <- t(modelEval(true_values=ifelse(ua.preds$Dx=="tcmr", 1, 0), predicted_values=ua.preds$TCMR_score, threshold=tcmr_coords$threshold, print.results=FALSE))
## HistoMx separate norm
test.tcmr.h <-t(modelEval(true_values=ifelse(test.preds$Dx=="tcmr", 1, 0), predicted_values=test.preds$TCMR_histomx, threshold=tcmr_coords$threshold, print.results=FALSE))
mgh.tcmr.h <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="tcmr", 1, 0), predicted_values=mgh.preds$TCMR_histomx, threshold=tcmr_coords$threshold, print.results=FALSE))
ua.tcmr.h <- t(modelEval(true_values=ifelse(ua.preds$Dx=="tcmr", 1, 0), predicted_values=ua.preds$TCMR_histomx, threshold=tcmr_coords$threshold, print.results=FALSE))
## HistoMx combined norm
test.tcmr.c <-t(modelEval(true_values=ifelse(test.preds$Dx=="tcmr", 1, 0), predicted_values=test.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
mgh.tcmr.c <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="tcmr", 1, 0), predicted_values=mgh.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
ua.tcmr.hc <- t(modelEval(true_values=ifelse(ua.preds$Dx=="tcmr", 1, 0), predicted_values=ua.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
test.tcmr.c
test.tcmr.h
mgh.tcmr.c
mgh.tcmr.h
test.metrics
mgh.metrics
test.metrics
ua.metrics
## HstoMx combined norm
t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
## cohort norm
test.amr.c <- t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
mgh.amr.c <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
ua.amr.c <- t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
## HistoMx separate norm
test.amr.h <- t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
mgh.amr.h <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
ua.amr.h <- t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
## HstoMx combined norm
t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
mgh.tcmr.c <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="tcmr", 1, 0), predicted_values=mgh.preds$TCMR_score, threshold=tcmr_coords$threshold, print.results=FALSE))
mgh.tcmr.c
##---------
## evaluate ensemble predictions
##---------
test.preds <- all.preds[all.preds$cohort=="ptg_test",]
mgh.preds <- all.preds[all.preds$cohort=="mgh",]
ua.preds <- all.preds[all.preds$cohort=="alberta",]
## AMR
roc <- pROC::roc(ifelse(train.preds$Dx=="amr", 1, 0), train.preds$amr_median, quiet=TRUE)
amr_coords <- coords(roc, x="best", input="threshold", best.method="youden", transpose=F)
t(modelEval(true_values=ifelse(train.preds$Dx=="amr", 1, 0), predicted_values=train.preds$amr_median, threshold=amr_coords$threshold, print.results=FALSE))
## cohort norm
test.amr.c <- t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
mgh.amr.c <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
ua.amr.c <- t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
## HistoMx separate norm
test.amr.h <- t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
mgh.amr.h <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
ua.amr.h <- t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
## HstoMx combined norm
t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
## TCMR
roc <- pROC::roc(ifelse(train.preds$Dx=="tcmr", 1, 0), train.preds$tcmr_median, quiet=TRUE)
tcmr_coords <- coords(roc, x="best", input="threshold", best.method="youden", transpose=F)
t(modelEval(true_values=ifelse(train.preds$Dx=="tcmr", 1, 0), predicted_values=train.preds$tcmr_median, threshold=tcmr_coords$threshold, print.results=FALSE))
## cohort norm
test.tcmr.c <- t(modelEval(true_values=ifelse(test.preds$Dx=="tcmr", 1, 0), predicted_values=test.preds$TCMR_score, threshold=tcmr_coords$threshold, print.results=FALSE))
mgh.tcmr.c <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="tcmr", 1, 0), predicted_values=mgh.preds$TCMR_score, threshold=tcmr_coords$threshold, print.results=FALSE))
ua.tcmr.c <- t(modelEval(true_values=ifelse(ua.preds$Dx=="tcmr", 1, 0), predicted_values=ua.preds$TCMR_score, threshold=tcmr_coords$threshold, print.results=FALSE))
## HistoMx separate norm
test.tcmr.h <-t(modelEval(true_values=ifelse(test.preds$Dx=="tcmr", 1, 0), predicted_values=test.preds$TCMR_histomx, threshold=tcmr_coords$threshold, print.results=FALSE))
mgh.tcmr.h <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="tcmr", 1, 0), predicted_values=mgh.preds$TCMR_histomx, threshold=tcmr_coords$threshold, print.results=FALSE))
ua.tcmr.h <- t(modelEval(true_values=ifelse(ua.preds$Dx=="tcmr", 1, 0), predicted_values=ua.preds$TCMR_histomx, threshold=tcmr_coords$threshold, print.results=FALSE))
## HistoMx combined norm
t(modelEval(true_values=ifelse(test.preds$Dx=="tcmr", 1, 0), predicted_values=test.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(mgh.preds$Dx=="tcmr", 1, 0), predicted_values=mgh.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(ua.preds$Dx=="tcmr", 1, 0), predicted_values=ua.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
## HistoMx combined norm
t(modelEval(true_values=ifelse(test.preds$Dx=="tcmr", 1, 0), predicted_values=test.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(mgh.preds$Dx=="tcmr", 1, 0), predicted_values=mgh.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(ua.preds$Dx=="tcmr", 1, 0), predicted_values=ua.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
## output performance metrics
test.metrics <- round(data.frame(amr_cohort=test.amr.c, amr_histomx=test.amr.h, tcmr_cohort=test.tcmr.c, tcmr_histomx=test.tcmr.h),3)
mgh.metrics <- round(data.frame(amr_cohort=mgh.amr.c, amr_histomx=mgh.amr.h, tcmr_cohort=mgh.tcmr.c, tcmr_histomx=mgh.tcmr.h),3)
ua.metrics <- round(data.frame(amr_cohort=ua.amr.c, amr_histomx=ua.amr.h, tcmr_cohort=ua.tcmr.c, tcmr_histomx=ua.tcmr.h),3)
test.metrics
##---------
## evaluate ensemble predictions
##---------
test.preds <- all.preds[all.preds$cohort=="ptg_test",]
mgh.preds <- all.preds[all.preds$cohort=="mgh",]
ua.preds <- all.preds[all.preds$cohort=="alberta",]
## AMR
roc <- pROC::roc(ifelse(train.preds$Dx=="amr", 1, 0), train.preds$amr_median, quiet=TRUE)
amr_coords <- coords(roc, x="best", input="threshold", best.method="youden", transpose=F)
t(modelEval(true_values=ifelse(train.preds$Dx=="amr", 1, 0), predicted_values=train.preds$amr_median, threshold=amr_coords$threshold, print.results=FALSE))
## cohort norm
test.amr.c <- t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
mgh.amr.c <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
ua.amr.c <- t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_score, threshold=amr_coords$threshold, print.results=FALSE))
## HistoMx separate norm
test.amr.h <- t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
mgh.amr.h <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
ua.amr.h <- t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_histomx, threshold=amr_coords$threshold, print.results=FALSE))
## HstoMx combined norm
t(modelEval(true_values=ifelse(test.preds$Dx=="amr", 1, 0), predicted_values=test.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(mgh.preds$Dx=="amr", 1, 0), predicted_values=mgh.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(ua.preds$Dx=="amr", 1, 0), predicted_values=ua.preds$AMR_histomx_c, threshold=amr_coords$threshold, print.results=FALSE))
## TCMR
roc <- pROC::roc(ifelse(train.preds$Dx=="tcmr", 1, 0), train.preds$tcmr_median, quiet=TRUE)
tcmr_coords <- coords(roc, x="best", input="threshold", best.method="youden", transpose=F)
t(modelEval(true_values=ifelse(train.preds$Dx=="tcmr", 1, 0), predicted_values=train.preds$tcmr_median, threshold=tcmr_coords$threshold, print.results=FALSE))
## cohort norm
test.tcmr.c <- t(modelEval(true_values=ifelse(test.preds$Dx=="tcmr", 1, 0), predicted_values=test.preds$TCMR_score, threshold=tcmr_coords$threshold, print.results=FALSE))
mgh.tcmr.c <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="tcmr", 1, 0), predicted_values=mgh.preds$TCMR_score, threshold=tcmr_coords$threshold, print.results=FALSE))
ua.tcmr.c <- t(modelEval(true_values=ifelse(ua.preds$Dx=="tcmr", 1, 0), predicted_values=ua.preds$TCMR_score, threshold=tcmr_coords$threshold, print.results=FALSE))
## HistoMx separate norm
test.tcmr.h <-t(modelEval(true_values=ifelse(test.preds$Dx=="tcmr", 1, 0), predicted_values=test.preds$TCMR_histomx, threshold=tcmr_coords$threshold, print.results=FALSE))
mgh.tcmr.h <- t(modelEval(true_values=ifelse(mgh.preds$Dx=="tcmr", 1, 0), predicted_values=mgh.preds$TCMR_histomx, threshold=tcmr_coords$threshold, print.results=FALSE))
ua.tcmr.h <- t(modelEval(true_values=ifelse(ua.preds$Dx=="tcmr", 1, 0), predicted_values=ua.preds$TCMR_histomx, threshold=tcmr_coords$threshold, print.results=FALSE))
## HistoMx combined norm
t(modelEval(true_values=ifelse(test.preds$Dx=="tcmr", 1, 0), predicted_values=test.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(mgh.preds$Dx=="tcmr", 1, 0), predicted_values=mgh.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
t(modelEval(true_values=ifelse(ua.preds$Dx=="tcmr", 1, 0), predicted_values=ua.preds$TCMR_histomx_c, threshold=tcmr_coords$threshold, print.results=FALSE))
## output performance metrics
test.metrics <- round(data.frame(amr_cohort=test.amr.c, amr_histomx=test.amr.h, tcmr_cohort=test.tcmr.c, tcmr_histomx=test.tcmr.h),3)
mgh.metrics <- round(data.frame(amr_cohort=mgh.amr.c, amr_histomx=mgh.amr.h, tcmr_cohort=mgh.tcmr.c, tcmr_histomx=mgh.tcmr.h),3)
ua.metrics <- round(data.frame(amr_cohort=ua.amr.c, amr_histomx=ua.amr.h, tcmr_cohort=ua.tcmr.c, tcmr_histomx=ua.tcmr.h),3)
write.table(test.metrics, file=paste0(outPath, "/model_eval/test_ensemble_metrics.txt"), quote=F, row.names=F, sep='\t')
write.table(mgh.metrics, file=paste0(outPath, "/model_eval/mgh_ensemble_metrics.txt"), quote=F, row.names=F, sep='\t')
write.table(ua.metrics, file=paste0(outPath, "/model_eval/alberta_ensemble_metrics.txt"), quote=F, row.names=F, sep='\t')
head(test.preds)
## HistoMx separate norm and cohort norm
#bl.preds <- read.csv('~/Dropbox/PTG/transcriptomics/nanostring/kidney/refset/current/model_dev/model_eval/ptg_borderline_scores_all_annot_histomx.csv', check.names=F)
test.preds <- read.csv('~/Dropbox/PTG/transcriptomics/nanostring/kidney/refset/current/model_dev/model_eval/test_scores_all_annot_histomx.csv', check.names=F)
test.preds$cohort <- "ptg_test"
mgh.preds <- read.csv('~/Dropbox/PTG/transcriptomics/nanostring/kidney/refset/current/model_dev/model_eval/mgh_scores_all_annot_histomx.csv', check.names=F)
mgh.preds$cohort <- "mgh"
ua.preds <- read.csv('~/Dropbox/PTG/transcriptomics/nanostring/kidney/refset/current/model_dev/model_eval/alberta_scores_all_annot_histomx.csv', check.names=F)
ua.preds$cohort <- "alberta"
head(ua.preds)
hist(test.preds$'%_ENDO_genes_above_LoD'
hist(test.preds$'%_ENDO_genes_above_LoD')
hist(test.preds$'%_ENDO_genes_above_LoD')
ggplot(test.preds, aes(x='%_ENDO_genes_above_LoD')) +
geom_histogram(color="dodgerblue", fill="white") +
geom_vline(aes(xintercept=50),
color="blue", linetype="dashed", size=1)
ggplot(test.preds, aes(x='%_ENDO_genes_above_LoD')) +
geom_histogram(color="dodgerblue", fill="white")
class(test.preds'%_ENDO_genes_above_LoD')
class(test.preds$'%_ENDO_genes_above_LoD')
ggplot() +
geom_histogram(aes(data=test.preds, x='%_ENDO_genes_above_LoD') color="dodgerblue", fill="white") +
geom_vline(aes(xintercept=50),
color="blue", linetype="dashed", size=1)
ggplot() + geom_histogram(aes(data=test.preds, x='%_ENDO_genes_above_LoD') color="dodgerblue", fill="white") +
geom_vline(aes(xintercept=50), color="blue", linetype="dashed", size=1)
ggplot() + geom_histogram(aes(data=test.preds, x='%_ENDO_genes_above_LoD'), color="dodgerblue", fill="white") +
geom_vline(aes(xintercept=50), color="blue", linetype="dashed", size=1)
ggplot(test.preds, aes(x='%_ENDO_genes_above_LoD')) + xlab("data folds") + ylab("total genes") +
geom_histogram(breaks=seq(0, 100, by=5), fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
test.preds$'%_ENDO_genes_above_LoD'
hist(test.preds$'%_ENDO_genes_above_LoD')
ggplot(test.preds, aes(x='%_ENDO_genes_above_LoD')) + xlab("data folds") + ylab("total genes") +
geom_histogram(fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x='%_ENDO_genes_above_LoD')) + xlab("data folds") + ylab("total genes") +
geom_histogram(binwidth = 0.5, fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x='%_ENDO_genes_above_LoD')) + xlab("data folds") + ylab("total genes") +
geom_histogram(binwidth = 0.5, fill="whitesmoke", col="dodgerblue")
ggplot(test.preds, aes(x='%_ENDO_genes_above_LoD')) + xlab("%_ENDO_genes_above_LoD") + ylab("total genes") +
geom_histogram(fill="whitesmoke", col="dodgerblue") + stat_count(width = 0.5)
ggplot(test.preds, aes(x='%_ENDO_genes_above_LoD')) +
xlab("%_ENDO_genes_above_LoD") + ylab("total genes") +
geom_histogram(fill="whitesmoke", col="dodgerblue") + stat_count(width = 0.5) +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
class(test.preds$ggplot(test.preds, aes(x=%_ENDO_genes_above_LoD)) +
xlab("%_ENDO_genes_above_LoD") + ylab("total genes") +
geom_histogram(fill="whitesmoke", col="dodgerblue") + stat_count(width = 0.5) +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
)
ggplot(test.preds, aes(x=%_ENDO_genes_above_LoD)) +
xlab("%_ENDO_genes_above_LoD") + ylab("total genes") +
geom_histogram(fill="whitesmoke", col="dodgerblue")
ggplot(test.preds, aes(x=BindingDensity)) +
xlab("%_ENDO_genes_above_LoD") + ylab("total genes") +
geom_histogram(fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=BindingDensity)) +
xlab("Binding Density") +
geom_histogram(fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=BindingDensity)) +
xlab("Binding Density") +
geom_histogram(binwidth=0.5, fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=BindingDensity)) +
xlab("Binding Density") +
geom_histogram(binwidth=0.1, fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=BindingDensity)) +
xlab("Binding Density") +
geom_histogram(binwidth=0.1, fill="whitesmoke", col="dodgerblue") +
geom_vline(xintercept=0.1, linetype="dashed", linewidth=0.4) +
geom_vline(xintercept=2.25, linetype="dashed", linewidth=0.4) +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=BindingDensity)) + xlab("Binding Density") +
geom_histogram(binwidth=0.2, fill="whitesmoke", col="dodgerblue") +
geom_vline(xintercept=0.1, linetype="dashed", linewidth=0.4) +
geom_vline(xintercept=2.25, linetype="dashed", linewidth=0.4) +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
test.preds$PCL
ggplot(test.preds, aes(x=PCL)) + xlab("PCL") +
geom_histogram(binwidth=0.2, fill="whitesmoke", col="dodgerblue") +
geom_vline(xintercept=, linetype="dashed", linewidth=0.4) +
geom_vline(xintercept=0.95, linetype="dashed", linewidth=0.4) +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=PCL)) + xlab("PCL") +
geom_histogram(binwidth=0.2, fill="whitesmoke", col="dodgerblue") +
geom_vline(xintercept=0.95, linetype="dashed", linewidth=0.4) +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=PCL)) + xlab("PCL") +
geom_histogram(binwidth=0.5, fill="whitesmoke", col="dodgerblue") +
geom_vline(xintercept=0.95, linetype="dashed", linewidth=0.4) +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=PCL)) + xlab("PCL") +
geom_histogram(binwidth=0.1, fill="whitesmoke", col="dodgerblue") +
geom_vline(xintercept=0.95, linetype="dashed", linewidth=0.4) +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
table(test.preds$PCL)
ggplot(test.preds, aes(x=HK_below_LoD)) + xlab("HK_below_LoD") +
geom_histogram(binwidth=0.1, fill="whitesmoke", col="dodgerblue") +
geom_vline(xintercept=0.95, linetype="dashed", linewidth=0.4) +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
test.preds$HK_below_LoD
ggplot(test.preds, aes(x=HK_below_LoD)) + xlab("HK_below_LoD") +
geom_histogram(binwidth=1, fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=HK_below_LoD)) + xlab("HK_below_LoD") +
xlim(c(1:12)) +
geom_histogram(binwidth=1, fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
??xlim
ggplot(test.preds, aes(x=HK_below_LoD)) + xlab("HK_below_LoD") +
xlim(c(1, 12)) +
geom_histogram(binwidth=1, fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=HK_below_LoD)) + xlab("HK_below_LoD") +
#xlim(c(1, 12)) +
geom_histogram(binwidth=1, fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=HK_below_LoD)) + xlab("HK_below_LoD") +
xlim(c(0, 12)) +
geom_histogram(binwidth=1, fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
test.preds$%_ENDO_genes_above_LoD
test.preds$'%_ENDO_genes_above_LoD'
test.preds$'%_registered_FOVs'
test.preds$'%_ENDO_genes_above_LoD'
hist(test.preds$'%_ENDO_genes_above_LoD')
?
?hist
hist(test.preds$'%_ENDO_genes_above_LoD', main="", xlab="% ENDO genes > LoD", col="whitesmoke", border="dodgerblue")
ggplot(test.preds, aes(x=HK_below_LoD)) + xlab("HK_below_LoD") +
geom_histogram(binwidth=1, fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
hist(test.preds$'%_ENDO_genes_above_LoD', main="", xlab="% ENDO genes > LoD", ylab="count", col="whitesmoke", border="dodgerblue")
hist(test.preds$'%_ENDO_genes_above_LoD', main="", xlab="% ENDO genes > LoD", ylab="count", col="whitesmoke", border="dodgerblue")
abline(v=50)
?abline
abline(v=50, col="gray", lty=3)
abline(v=50, col="gray", lty=2)
hist(test.preds$'%_ENDO_genes_above_LoD', main="", xlab="% ENDO genes > LoD", ylab="count", col="whitesmoke", border="dodgerblue")
abline(v=50, col="gray", lty=2)
hist(test.preds$'%_ENDO_genes_above_LoD', main="", xlab="% ENDO genes > LoD", ylab="count", col="whitesmoke", border="dodgerblue")
abline(v=50, col="black", lty=2)
ggplot(test.preds, aes(x=BindingDensity)) + xlab("Binding Density") +
geom_histogram(binwidth=0.2, fill="whitesmoke", col="dodgerblue") +
geom_vline(xintercept=0.1, linetype="dashed", linewidth=0.4) +
geom_vline(xintercept=2.25, linetype="dashed", linewidth=0.4) +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
ggplot(test.preds, aes(x=HK_below_LoD)) + xlab("HK_below_LoD") +
geom_histogram(binwidth=1, fill="whitesmoke", col="dodgerblue") +
theme(panel.grid.minor=element_line(colour="gray"),
panel.grid.major=element_blank(),
panel.background=element_blank(),
panel.border = element_rect(colour = "gray", fill=NA, size=1),
axis.line=element_line(colour="white"),
axis.text=element_text(face="bold", size=14, angle=0),
axis.title=element_text(face="bold", size=16, angle=0))
